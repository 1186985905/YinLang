{"version":3,"file":"js/101.f4f88c08.js","mappings":"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","sources":["webpack://agentui/./src/views/admin/PromptConfig.vue","webpack://agentui/src/views/admin/PromptConfig.vue","webpack://agentui/./src/views/admin/PromptConfig.vue?03b6","webpack://agentui/./src/views/admin/PromptConfig.vue?de0c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"prompt-config\"},[_c('h1',[_vm._v(\" 提示词配置 \"),_c('div',{staticClass:\"header-buttons\"},[_c('el-button',{attrs:{\"type\":\"default\",\"size\":\"small\",\"icon\":\"el-icon-back\"},on:{\"click\":_vm.goBack}},[_vm._v(\"返回管理面板\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"icon\":\"el-icon-s-home\"},on:{\"click\":_vm.goHome}},[_vm._v(\"返回主页\")])],1)]),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":6}},[_c('el-card',{staticClass:\"department-card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"部门列表\")]),_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.showAddDeptDialog}},[_vm._v(\"添加部门\")])],1),_c('div',{staticClass:\"departments-list\"},[_vm._l((_vm.departments),function(dept){return _c('div',{key:dept.id,staticClass:\"department-item\",class:{ active: _vm.currentDept && _vm.currentDept.id === dept.id },on:{\"click\":function($event){return _vm.handleDeptSelect(dept)}}},[_c('span',{staticClass:\"dept-name\"},[_vm._v(_vm._s(dept.name))]),_c('div',{staticClass:\"dept-actions\"},[_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.editDepartment(dept)}}},[_c('i',{staticClass:\"el-icon-edit\"})]),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.removeDepartment(dept)}}},[_c('i',{staticClass:\"el-icon-delete\"})])],1)])}),(_vm.departments.length === 0)?_c('div',{staticClass:\"empty-dept\"},[_c('i',{staticClass:\"el-icon-document\"}),_c('p',[_vm._v(\"暂无部门，请点击上方\\\"添加部门\\\"按钮添加\")])]):_vm._e()],2)])],1),_c('el-col',{attrs:{\"span\":18}},[_c('el-card',{staticClass:\"prompt-card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(_vm._s(_vm.currentDept ? _vm.currentDept.name + ' - 提示词模板列表' : '请选择部门'))]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"icon\":\"el-icon-plus\",\"disabled\":!_vm.currentDept},on:{\"click\":_vm.showAddPromptDialog}},[_vm._v(\" 添加提示词模板 \")])],1),(_vm.currentDept)?_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.promptList}},[_c('el-table-column',{attrs:{\"prop\":\"title\",\"label\":\"标题\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"prop\":\"content\",\"label\":\"提示词内容\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"prompt-content\"},[_vm._v(_vm._s(scope.row.content))])]}}],null,false,3876841598)}),_c('el-table-column',{attrs:{\"prop\":\"category\",\"label\":\"分类\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"size\":\"medium\"}},[_vm._v(_vm._s(scope.row.category))])]}}],null,false,2477035928)}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"150\",\"fixed\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":function($event){return _vm.editPrompt(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"plain\":\"\"},on:{\"click\":function($event){return _vm.removePrompt(scope.row)}}},[_vm._v(\"删除\")])]}}],null,false,1482538074)})],1):_c('div',{staticClass:\"empty-state\"},[_c('i',{staticClass:\"el-icon-document\"}),_c('p',[_vm._v(\"请先选择左侧部门来管理提示词模板\")])])],1)],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.deptDialogType === 'add' ? '添加部门' : '编辑部门',\"visible\":_vm.deptDialogVisible,\"width\":\"500px\"},on:{\"update:visible\":function($event){_vm.deptDialogVisible=$event}}},[_c('el-form',{ref:\"deptForm\",attrs:{\"model\":_vm.deptForm,\"rules\":_vm.deptRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"部门名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入部门名称\"},model:{value:(_vm.deptForm.name),callback:function ($$v) {_vm.$set(_vm.deptForm, \"name\", $$v)},expression:\"deptForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"备注\",\"prop\":\"remark\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3,\"placeholder\":\"请输入部门备注信息（可选）\"},model:{value:(_vm.deptForm.remark),callback:function ($$v) {_vm.$set(_vm.deptForm, \"remark\", $$v)},expression:\"deptForm.remark\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.deptDialogVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveDepartment}},[_vm._v(\"确定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.promptDialogType === 'add' ? '添加提示词模板' : '编辑提示词模板',\"visible\":_vm.promptDialogVisible,\"width\":\"650px\"},on:{\"update:visible\":function($event){_vm.promptDialogVisible=$event}}},[_c('el-form',{ref:\"promptForm\",attrs:{\"model\":_vm.promptForm,\"rules\":_vm.promptRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"标题\",\"prop\":\"title\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入提示词模板标题\"},model:{value:(_vm.promptForm.title),callback:function ($$v) {_vm.$set(_vm.promptForm, \"title\", $$v)},expression:\"promptForm.title\"}})],1),_c('el-form-item',{attrs:{\"label\":\"分类\",\"prop\":\"category\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择分类\"},model:{value:(_vm.promptForm.category),callback:function ($$v) {_vm.$set(_vm.promptForm, \"category\", $$v)},expression:\"promptForm.category\"}},[_c('el-option',{attrs:{\"label\":\"常用提示\",\"value\":\"常用提示\"}}),_c('el-option',{attrs:{\"label\":\"工作流程\",\"value\":\"工作流程\"}}),_c('el-option',{attrs:{\"label\":\"专业知识\",\"value\":\"专业知识\"}}),_c('el-option',{attrs:{\"label\":\"其他\",\"value\":\"其他\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"内容\",\"prop\":\"content\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":6,\"placeholder\":\"请输入提示词模板内容\"},model:{value:(_vm.promptForm.content),callback:function ($$v) {_vm.$set(_vm.promptForm, \"content\", $$v)},expression:\"promptForm.content\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.promptDialogVisible = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.savePrompt}},[_vm._v(\"确定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"prompt-config\">\n    <h1>\n      提示词配置\n      <div class=\"header-buttons\">\n        <el-button type=\"default\" size=\"small\" icon=\"el-icon-back\" @click=\"goBack\">返回管理面板</el-button>\n        <el-button type=\"primary\" size=\"small\" icon=\"el-icon-s-home\" @click=\"goHome\">返回主页</el-button>\n      </div>\n    </h1>\n\n    <el-row :gutter=\"20\">\n      <!-- 左侧部门列表 -->\n      <el-col :span=\"6\">\n        <el-card class=\"department-card\">\n          <div slot=\"header\" class=\"card-header\">\n            <span>部门列表</span>\n            <el-button type=\"text\" icon=\"el-icon-plus\" @click=\"showAddDeptDialog\">添加部门</el-button>\n          </div>\n          <div class=\"departments-list\">\n            <div \n              v-for=\"dept in departments\" \n              :key=\"dept.id\" \n              class=\"department-item\"\n              :class=\"{ active: currentDept && currentDept.id === dept.id }\"\n              @click=\"handleDeptSelect(dept)\"\n            >\n              <span class=\"dept-name\">{{ dept.name }}</span>\n              <div class=\"dept-actions\">\n                <el-button\n                  type=\"text\"\n                  size=\"mini\"\n                  @click.stop=\"editDepartment(dept)\">\n                  <i class=\"el-icon-edit\"></i>\n                </el-button>\n                <el-button\n                  type=\"text\"\n                  size=\"mini\"\n                  @click.stop=\"removeDepartment(dept)\">\n                  <i class=\"el-icon-delete\"></i>\n                </el-button>\n              </div>\n            </div>\n            <div v-if=\"departments.length === 0\" class=\"empty-dept\">\n              <i class=\"el-icon-document\"></i>\n              <p>暂无部门，请点击上方\"添加部门\"按钮添加</p>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 右侧提示词列表 -->\n      <el-col :span=\"18\">\n        <el-card class=\"prompt-card\">\n          <div slot=\"header\" class=\"card-header\">\n            <span>{{ currentDept ? currentDept.name + ' - 提示词模板列表' : '请选择部门' }}</span>\n            <el-button \n              type=\"primary\" \n              size=\"small\" \n              icon=\"el-icon-plus\" \n              @click=\"showAddPromptDialog\"\n              :disabled=\"!currentDept\">\n              添加提示词模板\n            </el-button>\n          </div>\n\n          <el-table\n            v-if=\"currentDept\"\n            :data=\"promptList\"\n            style=\"width: 100%\"\n            v-loading=\"loading\">\n            <el-table-column prop=\"title\" label=\"标题\" width=\"200\"></el-table-column>\n            <el-table-column prop=\"content\" label=\"提示词内容\">\n              <template slot-scope=\"scope\">\n                <div class=\"prompt-content\">{{ scope.row.content }}</div>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"category\" label=\"分类\" width=\"120\">\n              <template slot-scope=\"scope\">\n                <el-tag size=\"medium\">{{ scope.row.category }}</el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"primary\"\n                  plain\n                  @click=\"editPrompt(scope.row)\">编辑</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  plain\n                  @click=\"removePrompt(scope.row)\">删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n\n          <div v-else class=\"empty-state\">\n            <i class=\"el-icon-document\"></i>\n            <p>请先选择左侧部门来管理提示词模板</p>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 添加/编辑部门对话框 -->\n    <el-dialog\n      :title=\"deptDialogType === 'add' ? '添加部门' : '编辑部门'\"\n      :visible.sync=\"deptDialogVisible\"\n      width=\"500px\">\n      <el-form :model=\"deptForm\" :rules=\"deptRules\" ref=\"deptForm\" label-width=\"80px\">\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"deptForm.name\" placeholder=\"请输入部门名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-input v-model=\"deptForm.remark\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入部门备注信息（可选）\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"deptDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"saveDepartment\">确定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 添加/编辑提示词对话框 -->\n    <el-dialog\n      :title=\"promptDialogType === 'add' ? '添加提示词模板' : '编辑提示词模板'\"\n      :visible.sync=\"promptDialogVisible\"\n      width=\"650px\">\n      <el-form :model=\"promptForm\" :rules=\"promptRules\" ref=\"promptForm\" label-width=\"80px\">\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"promptForm.title\" placeholder=\"请输入提示词模板标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"category\">\n          <el-select v-model=\"promptForm.category\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option label=\"常用提示\" value=\"常用提示\"></el-option>\n            <el-option label=\"工作流程\" value=\"工作流程\"></el-option>\n            <el-option label=\"专业知识\" value=\"专业知识\"></el-option>\n            <el-option label=\"其他\" value=\"其他\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"内容\" prop=\"content\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"promptForm.content\"\n            :rows=\"6\"\n            placeholder=\"请输入提示词模板内容\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"promptDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"savePrompt\">确定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  getDepartmentList,\n  addDepartment,\n  updateDepartment,\n  deleteDepartment,\n  getPromptList,\n  addPrompt,\n  updatePrompt,\n  deletePrompt\n} from '@/api/department'\n\nexport default {\n  name: 'PromptConfig',\n  data() {\n    return {\n      loading: false,\n      departments: [],\n      currentDept: null,\n      promptList: [],\n      // 部门对话框\n      deptDialogVisible: false,\n      deptDialogType: 'add',\n      deptForm: {\n        name: '',\n        remark: ''\n      },\n      deptRules: {\n        name: [\n          { required: true, message: '请输入部门名称', trigger: 'blur' },\n          { min: 2, max: 60, message: '长度在 2 到 60 个字符', trigger: 'blur' }\n        ],\n        remark: [\n          { max: 255, message: '备注最多 255 个字符', trigger: 'blur' }\n        ]\n      },\n      // 提示词对话框\n      promptDialogVisible: false,\n      promptDialogType: 'add',\n      promptForm: {\n        title: '',\n        content: '',\n        department_id: null\n      },\n      promptRules: {\n        title: [\n          { required: true, message: '请输入提示词模板标题', trigger: 'blur' },\n          { min: 2, max: 60, message: '长度在 2 到 60 个字符', trigger: 'blur' }\n        ],\n        content: [\n          { required: true, message: '请输入提示词模板内容', trigger: 'blur' },\n          { min: 2, max: 360, message: '长度在 2 到 360 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    goBack() {\n      if (this.$route.path !== '/admin') {\n        this.$router.push('/admin');\n      }\n    },\n    goHome() {\n      if (this.$route.path !== '/') {\n        this.$router.push('/');\n      }\n    },\n    // 获取部门列表\n    async fetchDepartments() {\n      try {\n        this.loading = true\n        const res = await getDepartmentList()\n        // 确保返回的数据是数组\n        this.departments = Array.isArray(res.data) ? res.data : []\n        \n        // 如果有部门，默认选中第一个\n        if (this.departments.length > 0 && !this.currentDept) {\n          this.handleDeptSelect(this.departments[0])\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        this.$message.error('获取部门列表失败')\n        this.departments = [] // 确保失败时设置为空数组\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 获取提示词列表\n    async fetchPromptList() {\n      if (!this.currentDept) {\n        this.promptList = []\n        return\n      }\n      \n      try {\n        this.loading = true\n        const res = await getPromptList(this.currentDept.id)\n        // 确保返回的数据是数组\n        this.promptList = Array.isArray(res.data) ? res.data : []\n      } catch (error) {\n        console.error('获取提示词列表失败:', error)\n        this.$message.error('获取提示词列表失败')\n        this.promptList = [] // 确保失败时设置为空数组\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 选择部门\n    async handleDeptSelect(dept) {\n      if (!dept) return\n      this.currentDept = dept\n      await this.fetchPromptList()\n    },\n\n    // 显示添加部门对话框\n    showAddDeptDialog() {\n      this.deptDialogType = 'add'\n      this.deptForm = {\n        name: '',\n        remark: ''\n      }\n      this.deptDialogVisible = true\n    },\n\n    // 编辑部门\n    editDepartment(dept) {\n      this.deptDialogType = 'edit'\n      this.deptForm = {\n        id: dept.id,\n        name: dept.name,\n        remark: dept.remark || ''\n      }\n      this.deptDialogVisible = true\n    },\n\n    // 删除部门\n    async removeDepartment(dept) {\n      try {\n        await this.$confirm('确认删除该部门吗？相关的提示词模板也会被删除', '提示', {\n          type: 'warning'\n        })\n        \n        await deleteDepartment(dept.id)\n        this.$message.success('删除部门成功')\n        \n        if (this.currentDept && this.currentDept.id === dept.id) {\n          this.currentDept = null\n          this.promptList = []\n        }\n        \n        await this.fetchDepartments()\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除部门失败:', error)\n          this.$message.error(error.message || '删除失败')\n        }\n      }\n    },\n\n    // 保存部门\n    async saveDepartment() {\n      try {\n        await this.$refs.deptForm.validate()\n        \n        if (this.deptDialogType === 'add') {\n          await addDepartment(this.deptForm)\n          this.$message.success('添加部门成功')\n        } else {\n          await updateDepartment(this.deptForm.id, this.deptForm)\n          this.$message.success('更新部门成功')\n        }\n        \n        this.deptDialogVisible = false\n        this.resetDeptForm()\n        await this.fetchDepartments()\n      } catch (error) {\n        console.error('保存部门失败:', error)\n        this.$message.error(error.message || '操作失败')\n      }\n    },\n\n    // 显示添加提示词对话框\n    showAddPromptDialog() {\n      if (!this.currentDept) {\n        this.$message.warning('请先选择部门')\n        return\n      }\n      \n      this.promptDialogType = 'add'\n      this.promptForm = {\n        title: '',\n        content: '',\n        department_id: this.currentDept.id\n      }\n      this.promptDialogVisible = true\n    },\n\n    // 编辑提示词\n    editPrompt(prompt) {\n      this.promptDialogType = 'edit'\n      this.promptForm = { ...prompt }\n      this.promptDialogVisible = true\n    },\n\n    // 删除提示词\n    async removePrompt(prompt) {\n      try {\n        await this.$confirm('确认删除该提示词模板吗？', '提示', {\n          type: 'warning'\n        })\n        \n        await deletePrompt(prompt.id, this.currentDept.id)\n        this.$message.success('删除提示词模板成功')\n        await this.fetchPromptList()\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除提示词失败:', error)\n          this.$message.error(error.message || '删除失败')\n        }\n      }\n    },\n\n    // 保存提示词\n    async savePrompt() {\n      try {\n        await this.$refs.promptForm.validate()\n        \n        if (!this.currentDept) {\n          this.$message.warning('请先选择部门')\n          return\n        }\n        \n        // 确保设置了department_id\n        this.promptForm.department_id = this.currentDept.id\n        \n        if (this.promptDialogType === 'add') {\n          await addPrompt(this.promptForm)\n          this.$message.success('添加提示词模板成功')\n        } else {\n          await updatePrompt(this.promptForm.id, this.promptForm)\n          this.$message.success('更新提示词模板成功')\n        }\n        \n        this.promptDialogVisible = false\n        this.resetPromptForm()\n        await this.fetchPromptList()\n      } catch (error) {\n        console.error('保存提示词失败:', error)\n        this.$message.error(error.message || '操作失败')\n      }\n    },\n\n    // 重置表单\n    resetDeptForm() {\n      this.$refs.deptForm.resetFields()\n      this.deptForm = {\n        name: '',\n        remark: ''\n      }\n    },\n\n    resetPromptForm() {\n      this.$refs.promptForm.resetFields()\n      this.promptForm = {\n        title: '',\n        content: '',\n        department_id: this.currentDept ? this.currentDept.id : null\n      }\n    }\n  },\n  created() {\n    this.fetchDepartments()\n  }\n}\n</script>\n\n<style scoped>\n.prompt-config {\n  padding: 20px;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\nh1 {\n  font-size: 24px;\n  color: #333;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.department-card, .prompt-card {\n  margin-bottom: 20px;\n}\n\n.department-card {\n  min-height: 400px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.departments-list {\n  max-height: 550px;\n  overflow-y: auto;\n}\n\n.department-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  border-bottom: 1px solid #ebeef5;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.department-item:hover {\n  background-color: #f5f7fa;\n}\n\n.department-item.active {\n  background-color: #ecf5ff;\n}\n\n.dept-name {\n  font-size: 14px;\n  color: #303133;\n}\n\n.dept-actions {\n  display: flex;\n  gap: 5px;\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n.department-item:hover .dept-actions {\n  opacity: 1;\n}\n\n.empty-dept {\n  text-align: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-dept i {\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\n.prompt-content {\n  max-height: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 40px 0;\n  color: #909399;\n}\n\n.empty-state i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n@media screen and (max-width: 768px) {\n  .prompt-config {\n    padding: 10px;\n  }\n\n  h1 {\n    font-size: 20px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n\n  .header-buttons {\n    width: 100%;\n    justify-content: flex-start;\n  }\n\n  .header-buttons .el-button {\n    flex: 1;\n  }\n}\n</style> ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PromptConfig.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PromptConfig.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PromptConfig.vue?vue&type=template&id=493a2cd9&scoped=true\"\nimport script from \"./PromptConfig.vue?vue&type=script&lang=js\"\nexport * from \"./PromptConfig.vue?vue&type=script&lang=js\"\nimport style0 from \"./PromptConfig.vue?vue&type=style&index=0&id=493a2cd9&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"493a2cd9\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","on","goBack","goHome","slot","showAddDeptDialog","_l","departments","dept","key","id","class","active","currentDept","$event","handleDeptSelect","_s","name","stopPropagation","editDepartment","removeDepartment","length","_e","showAddPromptDialog","directives","rawName","value","loading","expression","staticStyle","promptList","scopedSlots","_u","fn","scope","row","content","category","editPrompt","removePrompt","deptDialogType","deptDialogVisible","ref","deptForm","deptRules","model","callback","$$v","$set","remark","saveDepartment","promptDialogType","promptDialogVisible","promptForm","promptRules","title","savePrompt","staticRenderFns","data","required","message","trigger","min","max","department_id","methods","$route","path","$router","push","fetchDepartments","res","getDepartmentList","Array","isArray","error","console","$message","fetchPromptList","getPromptList","$confirm","type","deleteDepartment","success","$refs","validate","addDepartment","updateDepartment","resetDeptForm","warning","prompt","deletePrompt","addPrompt","updatePrompt","resetPromptForm","resetFields","created","component"],"sourceRoot":""}